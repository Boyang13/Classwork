#include <stdio.h>
#include <time.h>
#include <unistd.h>
#include <stdlib.h>

void sort(int array[],int n); //function to be called later

int main()
{
    time_t begin = time(NULL);
    int array[50000], n, i; //declares variables, array can be changed when used later
    printf("Enter number of elements pressing return each time: \n"); //gets number of elements
    scanf("%d", &n);
    printf("Enter %d Numbers: \n", n); //gets numbers as array
    for(i = 0; i < n; i++) //stores all numbers into array
    scanf("%d", &array[i]);

    sort(array, n); //calls function to sort
    time_t end = time(NULL);
    printf("The elapsed time is %ld seconds\n", (end - begin));

    // This program will create same sequence of
    // random numbers on every program run
    FILE* fptr;
    // creating a file "random.txt" in "write" mode
    fptr = fopen("random.txt", "w");
    int a;
    if (fptr == NULL) {
        printf("ERROR");
        exit(1);
    }

    for (a = 0; a < 10000; a++) {

        // to generate number less than 100000
        int val = rand() % 100000;

        // storing data to file
        fprintf(fptr, "%d ", val);
    }

    // closing the file
    fclose(fptr);
    printf("numbers generated successfully !! ");
    return 0;
}

void sort(int array[], int n)
{
    int i, j, position, swap;
    for(i = 0; i < (n - 1); i++) //slowly adds i to one below the array
    {
        position = i;
        for(j = i + 1; j < n; j++) //adds j to n
        {
            if(array[position] > array[j]) //selection sort examines each value and gets lowest number to the left
            position = j;
        }
        if(position != i)
        {
            swap = array[i];
            array[i] = array[position];
            array[position] = swap; //this loop runs until all numbers are checked
        }
    }
    printf("Sorted Array: \n");
    for(i = 0; i < n; i++)
    printf("%d, \n", array[i]);
}
