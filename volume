/* Read the header from the input file
Write the header to the output file
Repeat reading sample forn input file and multiplying sample value by volume factor
and writing the new sample to the output file*/

#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>

// Number of bytes in .wav header
const int HEADER_SIZE = 44;

int main(int argc, char *argv[])
{
    // Check command-line arguments
    if (argc != 4)
    {
        printf("Usage: ./volume input.wav output.wav factor\n");
        return 1;
    }

    // Open files and determine scaling factor
    FILE *input = fopen(argv[1], "r");
    if (input == NULL)
    {
        printf("Could not open file.\n");
        return 1;
    }

    FILE *output = fopen(argv[2], "w");
    if (output == NULL)
    {
        printf("Could not open file.\n");
        return 1;
    }

    float factor = atof(argv[3]);

    // TODO: Copy header from input file to output file
    uint8_t header[HEADER_SIZE]; //Place in computer memory to read header array is unsigned 8 bit ints and already defined header size
    fread(header, HEADER_SIZE, 1, input); //Reads buffer from input file - reads siez bytes from input file into header variable
    fwrite(header, HEADER_SIZE, 1, output); //Writes what is read into ouput file through header

    // TODO: Read samples from input file and write updated data to output file
    //For each of the 2 byte samples, we read the sample into memory, modify it to adjust volume, and write to updated file
    int16_t buffer; //stores enough for 2 byte sample
    while (fread(&buffer, sizeof(int16_t), 1,
                 input)) //repeats using while loop, reads from input file inot the buffer, passes address of buffer
    {
        //When there is no more to read, fread will return 0 and exit the while loop
        //Updates the volume
        buffer *= factor; //factor that changes the volume, larger than 1 = increase and less than 1 = decrease
        fwrite(&buffer, sizeof(int16_t), 1, output); //writes data from buffer to output file
    }
    // Close files
    fclose(input);
    fclose(output);
}
